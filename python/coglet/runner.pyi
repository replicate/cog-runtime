"""
This type stub file was generated by pyright.
"""

from typing import Any, AsyncGenerator, Callable, Dict, Optional
from coglet import adt, api

class FunctionPredictor(api.BasePredictor):
    setup_done = ...
    def __init__(self, _predict: Callable, test_inputs: Optional[Any]) -> None:
        ...
    
    def setup(self, weights=...) -> None:
        ...
    
    def predict(self, **kwargs: Any) -> Any:
        ...
    


class AsyncFunctionPredictor(api.BasePredictor):
    setup_done = ...
    def __init__(self, _predict: Callable, test_inputs: Optional[Any]) -> None:
        ...
    
    def setup(self, weights=...) -> None:
        ...
    
    async def predict(self, **kwargs: Any) -> Any:
        ...
    


class AsyncIteratorFunctionPredictor(api.BasePredictor):
    setup_done = ...
    def __init__(self, _predict: Callable, test_inputs: Optional[Any]) -> None:
        ...
    
    def setup(self, weights=...) -> None:
        ...
    
    async def predict(self, **kwargs: Any) -> Any:
        ...
    


def create_function_predictor(p: Callable, *, test_inputs: Optional[Any] = ...) -> api.BasePredictor:
    ...

class Runner:
    predictor: api.BasePredictor
    def __init__(self, predictor: adt.Predictor) -> None:
        ...
    
    async def test(self) -> Any:
        ...
    
    async def setup(self) -> None:
        ...
    
    def is_iter(self) -> bool:
        ...
    
    async def predict(self, inputs: Dict[str, Any]) -> Any:
        ...
    
    async def predict_iter(self, inputs: Dict[str, Any]) -> AsyncGenerator[Any, None]:
        ...
    


