"""
This type stub file was generated by pyright.
"""

import contextvars
from typing import Any, Callable, Dict, Optional

ctx_pid: contextvars.ContextVar[Optional[str]] = ...
metrics: Dict[str, Dict[str, Any]] = ...
contexts: Dict[str, Dict[str, Any]] = ...
ctx_write_buf: Dict[str, str] = ...
class Scope:
    def __init__(self, pid: str) -> None:
        ...
    
    def record_metric(self, name: str, value: Any) -> None:
        ...
    
    @property
    def context(self) -> Dict[str, Any]:
        ...
    
    @context.setter
    def context(self, value: Dict[str, Any]) -> None:
        ...
    


def current_scope() -> Scope:
    ...

def flush_ctx_write_buf(pid: str, write_fn=...) -> None:
    """Flush any remaining buffered output for a prediction ID"""
    ...

def flush_all_buffers(write_fn=...) -> None:
    """Flush all remaining buffered output"""
    ...

def cleanup_prediction_context(pid: str) -> None:
    """Clean up all context for a prediction, flushing any remaining output"""
    ...

def ctx_write(write_fn) -> Callable[[str], int]:
    ...

